# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: thermal.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from biostarPython.service import err_pb2 as err__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rthermal.proto\x12\x07thermal\x1a\terr.proto\"G\n\x10ThermalCameraROI\x12\t\n\x01x\x18\x01 \x01(\r\x12\t\n\x01y\x18\x02 \x01(\r\x12\r\n\x05width\x18\x03 \x01(\r\x12\x0e\n\x06height\x18\x04 \x01(\r\"\x9d\x01\n\rThermalCamera\x12\x10\n\x08\x64istance\x18\x01 \x01(\r\x12\x14\n\x0c\x65missionRate\x18\x02 \x01(\r\x12&\n\x03ROI\x18\x03 \x01(\x0b\x32\x19.thermal.ThermalCameraROI\x12\x1b\n\x13useBodyCompensation\x18\x04 \x01(\x08\x12\x1f\n\x17\x63ompensationTemperature\x18\x05 \x01(\x05\"\x8d\x03\n\rThermalConfig\x12%\n\tcheckMode\x18\x01 \x01(\x0e\x32\x12.thermal.CheckMode\x12\'\n\ncheckOrder\x18\x02 \x01(\x0e\x32\x13.thermal.CheckOrder\x12\x35\n\x11temperatureFormat\x18\x03 \x01(\x0e\x32\x1a.thermal.TemperatureFormat\x12\x1c\n\x14temperatureThreshold\x18\x04 \x01(\r\x12\x18\n\x10\x61uditTemperature\x18\x05 \x01(\x08\x12\x16\n\x0euseRejectSound\x18\x06 \x01(\x08\x12\x19\n\x11useOverlapThermal\x18\x07 \x01(\x08\x12&\n\x06\x63\x61mera\x18\x08 \x01(\x0b\x32\x16.thermal.ThermalCamera\x12)\n\rmaskCheckMode\x18\t \x01(\x0e\x32\x12.thermal.CheckMode\x12\x37\n\x12maskDetectionLevel\x18\n \x01(\x0e\x32\x1b.thermal.MaskDetectionLevel\"$\n\x10GetConfigRequest\x12\x10\n\x08\x64\x65viceID\x18\x01 \x01(\r\";\n\x11GetConfigResponse\x12&\n\x06\x63onfig\x18\x01 \x01(\x0b\x32\x16.thermal.ThermalConfig\"L\n\x10SetConfigRequest\x12\x10\n\x08\x64\x65viceID\x18\x01 \x01(\r\x12&\n\x06\x63onfig\x18\x02 \x01(\x0b\x32\x16.thermal.ThermalConfig\"\x13\n\x11SetConfigResponse\"R\n\x15SetConfigMultiRequest\x12\x11\n\tdeviceIDs\x18\x01 \x03(\r\x12&\n\x06\x63onfig\x18\x02 \x01(\x0b\x32\x16.thermal.ThermalConfig\"B\n\x16SetConfigMultiResponse\x12(\n\x0c\x64\x65viceErrors\x18\x01 \x03(\x0b\x32\x12.err.ErrorResponse\"\x8a\x01\n\x0eTemperatureLog\x12\n\n\x02ID\x18\x01 \x01(\r\x12\x11\n\ttimestamp\x18\x02 \x01(\r\x12\x10\n\x08\x64\x65viceID\x18\x03 \x01(\r\x12\x0e\n\x06userID\x18\x04 \x01(\t\x12\x11\n\teventCode\x18\x05 \x01(\r\x12\x0f\n\x07subCode\x18\x06 \x01(\r\x12\x13\n\x0btemperature\x18\x07 \x01(\r\"W\n\x18GetTemperatureLogRequest\x12\x10\n\x08\x64\x65viceID\x18\x01 \x01(\r\x12\x14\n\x0cstartEventID\x18\x02 \x01(\r\x12\x13\n\x0bmaxNumOfLog\x18\x03 \x01(\r\"O\n\x19GetTemperatureLogResponse\x12\x32\n\x11temperatureEvents\x18\x01 \x03(\x0b\x32\x17.thermal.TemperatureLog*(\n\tCheckMode\x12\x07\n\x03OFF\x10\x00\x12\x08\n\x04HARD\x10\x01\x12\x08\n\x04SOFT\x10\x02*?\n\nCheckOrder\x12\x0e\n\nAFTER_AUTH\x10\x00\x12\x0f\n\x0b\x42\x45\x46ORE_AUTH\x10\x01\x12\x10\n\x0cWITHOUT_AUTH\x10\x02*0\n\x11TemperatureFormat\x12\x0e\n\nFAHRENHEIT\x10\x00\x12\x0b\n\x07\x43\x45LSIUS\x10\x01*F\n\x12MaskDetectionLevel\x12\x0b\n\x07NOT_USE\x10\x00\x12\n\n\x06NORMAL\x10\x01\x12\x08\n\x04HIGH\x10\x02\x12\r\n\tVERY_HIGH\x10\x03\x32\xc0\x02\n\x07Thermal\x12\x42\n\tGetConfig\x12\x19.thermal.GetConfigRequest\x1a\x1a.thermal.GetConfigResponse\x12\x42\n\tSetConfig\x12\x19.thermal.SetConfigRequest\x1a\x1a.thermal.SetConfigResponse\x12Q\n\x0eSetConfigMulti\x12\x1e.thermal.SetConfigMultiRequest\x1a\x1f.thermal.SetConfigMultiResponse\x12Z\n\x11GetTemperatureLog\x12!.thermal.GetTemperatureLogRequest\x1a\".thermal.GetTemperatureLogResponseB7\n\x1a\x63om.supremainc.sdk.thermalP\x01Z\x17\x62iostar/service/thermalb\x06proto3')

_CHECKMODE = DESCRIPTOR.enum_types_by_name['CheckMode']
CheckMode = enum_type_wrapper.EnumTypeWrapper(_CHECKMODE)
_CHECKORDER = DESCRIPTOR.enum_types_by_name['CheckOrder']
CheckOrder = enum_type_wrapper.EnumTypeWrapper(_CHECKORDER)
_TEMPERATUREFORMAT = DESCRIPTOR.enum_types_by_name['TemperatureFormat']
TemperatureFormat = enum_type_wrapper.EnumTypeWrapper(_TEMPERATUREFORMAT)
_MASKDETECTIONLEVEL = DESCRIPTOR.enum_types_by_name['MaskDetectionLevel']
MaskDetectionLevel = enum_type_wrapper.EnumTypeWrapper(_MASKDETECTIONLEVEL)
OFF = 0
HARD = 1
SOFT = 2
AFTER_AUTH = 0
BEFORE_AUTH = 1
WITHOUT_AUTH = 2
FAHRENHEIT = 0
CELSIUS = 1
NOT_USE = 0
NORMAL = 1
HIGH = 2
VERY_HIGH = 3


_THERMALCAMERAROI = DESCRIPTOR.message_types_by_name['ThermalCameraROI']
_THERMALCAMERA = DESCRIPTOR.message_types_by_name['ThermalCamera']
_THERMALCONFIG = DESCRIPTOR.message_types_by_name['ThermalConfig']
_GETCONFIGREQUEST = DESCRIPTOR.message_types_by_name['GetConfigRequest']
_GETCONFIGRESPONSE = DESCRIPTOR.message_types_by_name['GetConfigResponse']
_SETCONFIGREQUEST = DESCRIPTOR.message_types_by_name['SetConfigRequest']
_SETCONFIGRESPONSE = DESCRIPTOR.message_types_by_name['SetConfigResponse']
_SETCONFIGMULTIREQUEST = DESCRIPTOR.message_types_by_name['SetConfigMultiRequest']
_SETCONFIGMULTIRESPONSE = DESCRIPTOR.message_types_by_name['SetConfigMultiResponse']
_TEMPERATURELOG = DESCRIPTOR.message_types_by_name['TemperatureLog']
_GETTEMPERATURELOGREQUEST = DESCRIPTOR.message_types_by_name['GetTemperatureLogRequest']
_GETTEMPERATURELOGRESPONSE = DESCRIPTOR.message_types_by_name['GetTemperatureLogResponse']
ThermalCameraROI = _reflection.GeneratedProtocolMessageType('ThermalCameraROI', (_message.Message,), {
  'DESCRIPTOR' : _THERMALCAMERAROI,
  '__module__' : 'thermal_pb2'
  # @@protoc_insertion_point(class_scope:thermal.ThermalCameraROI)
  })
_sym_db.RegisterMessage(ThermalCameraROI)

ThermalCamera = _reflection.GeneratedProtocolMessageType('ThermalCamera', (_message.Message,), {
  'DESCRIPTOR' : _THERMALCAMERA,
  '__module__' : 'thermal_pb2'
  # @@protoc_insertion_point(class_scope:thermal.ThermalCamera)
  })
_sym_db.RegisterMessage(ThermalCamera)

ThermalConfig = _reflection.GeneratedProtocolMessageType('ThermalConfig', (_message.Message,), {
  'DESCRIPTOR' : _THERMALCONFIG,
  '__module__' : 'thermal_pb2'
  # @@protoc_insertion_point(class_scope:thermal.ThermalConfig)
  })
_sym_db.RegisterMessage(ThermalConfig)

GetConfigRequest = _reflection.GeneratedProtocolMessageType('GetConfigRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCONFIGREQUEST,
  '__module__' : 'thermal_pb2'
  # @@protoc_insertion_point(class_scope:thermal.GetConfigRequest)
  })
_sym_db.RegisterMessage(GetConfigRequest)

GetConfigResponse = _reflection.GeneratedProtocolMessageType('GetConfigResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETCONFIGRESPONSE,
  '__module__' : 'thermal_pb2'
  # @@protoc_insertion_point(class_scope:thermal.GetConfigResponse)
  })
_sym_db.RegisterMessage(GetConfigResponse)

SetConfigRequest = _reflection.GeneratedProtocolMessageType('SetConfigRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETCONFIGREQUEST,
  '__module__' : 'thermal_pb2'
  # @@protoc_insertion_point(class_scope:thermal.SetConfigRequest)
  })
_sym_db.RegisterMessage(SetConfigRequest)

SetConfigResponse = _reflection.GeneratedProtocolMessageType('SetConfigResponse', (_message.Message,), {
  'DESCRIPTOR' : _SETCONFIGRESPONSE,
  '__module__' : 'thermal_pb2'
  # @@protoc_insertion_point(class_scope:thermal.SetConfigResponse)
  })
_sym_db.RegisterMessage(SetConfigResponse)

SetConfigMultiRequest = _reflection.GeneratedProtocolMessageType('SetConfigMultiRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETCONFIGMULTIREQUEST,
  '__module__' : 'thermal_pb2'
  # @@protoc_insertion_point(class_scope:thermal.SetConfigMultiRequest)
  })
_sym_db.RegisterMessage(SetConfigMultiRequest)

SetConfigMultiResponse = _reflection.GeneratedProtocolMessageType('SetConfigMultiResponse', (_message.Message,), {
  'DESCRIPTOR' : _SETCONFIGMULTIRESPONSE,
  '__module__' : 'thermal_pb2'
  # @@protoc_insertion_point(class_scope:thermal.SetConfigMultiResponse)
  })
_sym_db.RegisterMessage(SetConfigMultiResponse)

TemperatureLog = _reflection.GeneratedProtocolMessageType('TemperatureLog', (_message.Message,), {
  'DESCRIPTOR' : _TEMPERATURELOG,
  '__module__' : 'thermal_pb2'
  # @@protoc_insertion_point(class_scope:thermal.TemperatureLog)
  })
_sym_db.RegisterMessage(TemperatureLog)

GetTemperatureLogRequest = _reflection.GeneratedProtocolMessageType('GetTemperatureLogRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTEMPERATURELOGREQUEST,
  '__module__' : 'thermal_pb2'
  # @@protoc_insertion_point(class_scope:thermal.GetTemperatureLogRequest)
  })
_sym_db.RegisterMessage(GetTemperatureLogRequest)

GetTemperatureLogResponse = _reflection.GeneratedProtocolMessageType('GetTemperatureLogResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTEMPERATURELOGRESPONSE,
  '__module__' : 'thermal_pb2'
  # @@protoc_insertion_point(class_scope:thermal.GetTemperatureLogResponse)
  })
_sym_db.RegisterMessage(GetTemperatureLogResponse)

_THERMAL = DESCRIPTOR.services_by_name['Thermal']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\032com.supremainc.sdk.thermalP\001Z\027biostar/service/thermal'
  _CHECKMODE._serialized_start=1331
  _CHECKMODE._serialized_end=1371
  _CHECKORDER._serialized_start=1373
  _CHECKORDER._serialized_end=1436
  _TEMPERATUREFORMAT._serialized_start=1438
  _TEMPERATUREFORMAT._serialized_end=1486
  _MASKDETECTIONLEVEL._serialized_start=1488
  _MASKDETECTIONLEVEL._serialized_end=1558
  _THERMALCAMERAROI._serialized_start=37
  _THERMALCAMERAROI._serialized_end=108
  _THERMALCAMERA._serialized_start=111
  _THERMALCAMERA._serialized_end=268
  _THERMALCONFIG._serialized_start=271
  _THERMALCONFIG._serialized_end=668
  _GETCONFIGREQUEST._serialized_start=670
  _GETCONFIGREQUEST._serialized_end=706
  _GETCONFIGRESPONSE._serialized_start=708
  _GETCONFIGRESPONSE._serialized_end=767
  _SETCONFIGREQUEST._serialized_start=769
  _SETCONFIGREQUEST._serialized_end=845
  _SETCONFIGRESPONSE._serialized_start=847
  _SETCONFIGRESPONSE._serialized_end=866
  _SETCONFIGMULTIREQUEST._serialized_start=868
  _SETCONFIGMULTIREQUEST._serialized_end=950
  _SETCONFIGMULTIRESPONSE._serialized_start=952
  _SETCONFIGMULTIRESPONSE._serialized_end=1018
  _TEMPERATURELOG._serialized_start=1021
  _TEMPERATURELOG._serialized_end=1159
  _GETTEMPERATURELOGREQUEST._serialized_start=1161
  _GETTEMPERATURELOGREQUEST._serialized_end=1248
  _GETTEMPERATURELOGRESPONSE._serialized_start=1250
  _GETTEMPERATURELOGRESPONSE._serialized_end=1329
  _THERMAL._serialized_start=1561
  _THERMAL._serialized_end=1881
# @@protoc_insertion_point(module_scope)
