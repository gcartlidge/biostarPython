# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: device.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from biostarPython.service import err_pb2 as err__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0c\x64\x65vice.proto\x12\x06\x64\x65vice\x1a\terr.proto\"\"\n\x0eGetInfoRequest\x12\x10\n\x08\x64\x65viceID\x18\x01 \x01(\r\"\x8e\x01\n\x0b\x46\x61\x63toryInfo\x12\x0f\n\x07MACAddr\x18\x02 \x01(\t\x12\x11\n\tmodelName\x18\x03 \x01(\t\x12\x17\n\x0f\x66irmwareVersion\x18\x04 \x01(\t\x12\x15\n\rkernelVersion\x18\x05 \x01(\t\x12\x15\n\rBSCoreVersion\x18\x06 \x01(\t\x12\x14\n\x0c\x62oardVersion\x18\x07 \x01(\t\"4\n\x0fGetInfoResponse\x12!\n\x04info\x18\x01 \x01(\x0b\x32\x13.device.FactoryInfo\",\n\x18GetCapabilityInfoRequest\x12\x10\n\x08\x64\x65viceID\x18\x01 \x01(\r\"\x8c\x05\n\x0e\x43\x61pabilityInfo\x12\x1a\n\x04type\x18\x01 \x01(\x0e\x32\x0c.device.Type\x12\x14\n\x0cmaxNumOfUser\x18\x02 \x01(\r\x12\x14\n\x0cPINSupported\x18\x03 \x01(\x08\x12\x15\n\rcardSupported\x18\x04 \x01(\x08\x12\x17\n\x0f\x63\x61rd1xSupported\x18\x05 \x01(\x08\x12\x15\n\rSEOSSupported\x18\x06 \x01(\x08\x12\x17\n\x0f\x66ingerSupported\x18\x07 \x01(\x08\x12\x15\n\rfaceSupported\x18\x08 \x01(\x08\x12\x19\n\x11userNameSupported\x18\n \x01(\x08\x12\x1a\n\x12userPhotoSupported\x18\x0b \x01(\x08\x12\x1b\n\x13userPhraseSupported\x18\x0c \x01(\x08\x12\x1f\n\x17\x61lphanumericIDSupported\x18\r \x01(\x08\x12\x15\n\rWLANSupported\x18\x14 \x01(\x08\x12\x19\n\x11imageLogSupported\x18\x15 \x01(\x08\x12\x15\n\rVOIPSupported\x18\x16 \x01(\x08\x12\x14\n\x0cTNASupported\x18\x1e \x01(\x08\x12\x18\n\x10jobCodeSupported\x18\x1f \x01(\x08\x12\x18\n\x10wiegandSupported\x18( \x01(\x08\x12\x1d\n\x15wiegandMultiSupported\x18) \x01(\x08\x12\x1e\n\x16triggerActionSupported\x18* \x01(\x08\x12\x14\n\x0c\x44STSupported\x18+ \x01(\x08\x12\x14\n\x0c\x44NSSupported\x18, \x01(\x08\x12\x18\n\x10OSDPKeySupported\x18\x32 \x01(\x08\x12\x19\n\x11RS485ExtSupported\x18\x33 \x01(\x08\x12\x13\n\x0bQRSupported\x18< \x01(\x08\"D\n\x19GetCapabilityInfoResponse\x12\'\n\x07\x63\x61pInfo\x18\x01 \x01(\x0b\x32\x16.device.CapabilityInfo\"\'\n\x13\x44\x65leteRootCARequest\x12\x10\n\x08\x64\x65viceID\x18\x01 \x01(\r\"\x16\n\x14\x44\x65leteRootCAResponse\"\x1f\n\x0bLockRequest\x12\x10\n\x08\x64\x65viceID\x18\x01 \x01(\r\"\x0e\n\x0cLockResponse\"%\n\x10LockMultiRequest\x12\x11\n\tdeviceIDs\x18\x01 \x03(\r\"=\n\x11LockMultiResponse\x12(\n\x0c\x64\x65viceErrors\x18\x01 \x03(\x0b\x32\x12.err.ErrorResponse\"!\n\rUnlockRequest\x12\x10\n\x08\x64\x65viceID\x18\x01 \x01(\r\"\x10\n\x0eUnlockResponse\"\'\n\x12UnlockMultiRequest\x12\x11\n\tdeviceIDs\x18\x01 \x03(\r\"?\n\x13UnlockMultiResponse\x12(\n\x0c\x64\x65viceErrors\x18\x01 \x03(\x0b\x32\x12.err.ErrorResponse\"!\n\rRebootRequest\x12\x10\n\x08\x64\x65viceID\x18\x01 \x01(\r\"\x10\n\x0eRebootResponse\"\'\n\x12RebootMultiRequest\x12\x11\n\tdeviceIDs\x18\x01 \x03(\r\"?\n\x13RebootMultiResponse\x12(\n\x0c\x64\x65viceErrors\x18\x01 \x03(\x0b\x32\x12.err.ErrorResponse\"\'\n\x13\x46\x61\x63toryResetRequest\x12\x10\n\x08\x64\x65viceID\x18\x01 \x01(\r\"\x16\n\x14\x46\x61\x63toryResetResponse\"-\n\x18\x46\x61\x63toryResetMultiRequest\x12\x11\n\tdeviceIDs\x18\x01 \x03(\r\"E\n\x19\x46\x61\x63toryResetMultiResponse\x12(\n\x0c\x64\x65viceErrors\x18\x01 \x03(\x0b\x32\x12.err.ErrorResponse\"\"\n\x0e\x43learDBRequest\x12\x10\n\x08\x64\x65viceID\x18\x01 \x01(\r\"\x11\n\x0f\x43learDBResponse\"(\n\x13\x43learDBMultiRequest\x12\x11\n\tdeviceIDs\x18\x01 \x03(\r\"@\n\x14\x43learDBMultiResponse\x12(\n\x0c\x64\x65viceErrors\x18\x01 \x03(\x0b\x32\x12.err.ErrorResponse\"K\n\x12ResetConfigRequest\x12\x10\n\x08\x64\x65viceID\x18\x01 \x01(\r\x12\x13\n\x0bwithNetwork\x18\x02 \x01(\x08\x12\x0e\n\x06withDB\x18\x03 \x01(\x08\"\x15\n\x13ResetConfigResponse\"Q\n\x17ResetConfigMultiRequest\x12\x11\n\tdeviceIDs\x18\x01 \x03(\r\x12\x13\n\x0bwithNetwork\x18\x02 \x01(\x08\x12\x0e\n\x06withDB\x18\x03 \x01(\x08\"D\n\x18ResetConfigMultiResponse\x12(\n\x0c\x64\x65viceErrors\x18\x01 \x03(\x0b\x32\x12.err.ErrorResponse\"@\n\x16UpgradeFirmwareRequest\x12\x10\n\x08\x64\x65viceID\x18\x01 \x01(\r\x12\x14\n\x0c\x66irmwareData\x18\x02 \x01(\x0c\"\x19\n\x17UpgradeFirmwareResponse\"F\n\x1bUpgradeFirmwareMultiRequest\x12\x11\n\tdeviceIDs\x18\x01 \x03(\r\x12\x14\n\x0c\x66irmwareData\x18\x02 \x01(\x0c\"H\n\x1cUpgradeFirmwareMultiResponse\x12(\n\x0c\x64\x65viceErrors\x18\x01 \x03(\x0b\x32\x12.err.ErrorResponse\"%\n\x11GetHashKeyRequest\x12\x10\n\x08\x64\x65viceID\x18\x01 \x01(\r\"9\n\x12GetHashKeyResponse\x12\x11\n\tisDefault\x18\x01 \x01(\x08\x12\x10\n\x08\x63hecksum\x18\x02 \x01(\r\"J\n\x11SetHashKeyRequest\x12\x10\n\x08\x64\x65viceID\x18\x01 \x01(\r\x12\x12\n\nsetDefault\x18\x02 \x01(\x08\x12\x0f\n\x07hashKey\x18\x03 \x01(\x0c\"\x14\n\x12SetHashKeyResponse*\x81\x05\n\x04Type\x12\r\n\tUNDEFINED\x10\x00\x12\x11\n\rBIOENTRY_PLUS\x10\x01\x12\x0e\n\nBIOENTRY_W\x10\x02\x12\x0f\n\x0b\x42IOLITE_NET\x10\x03\x12\t\n\x05XPASS\x10\x04\x12\x0c\n\x08XPASS_S2\x10\x05\x12\r\n\tENTRY_MAX\x10\x05\x12\x0f\n\x0bSECURE_IO_2\x10\x06\x12\x12\n\x0e\x44OOR_MODULE_20\x10\x07\x12\x10\n\x0c\x42IOSTATION_2\x10\x08\x12\x11\n\rBIOSTATION_A2\x10\t\x12\x11\n\rFACESTATION_2\x10\n\x12\r\n\tIO_DEVICE\x10\x0b\x12\x11\n\rBIOSTATION_L2\x10\x0c\x12\x0f\n\x0b\x42IOENTRY_W2\x10\r\x12\x10\n\x0bRS485_SLAVE\x10\x80\x01\x12\x12\n\x0e\x43ORESTATION_40\x10\x0e\x12\x11\n\rOUTPUT_MODULE\x10\x0f\x12\x10\n\x0cINPUT_MODULE\x10\x10\x12\x0f\n\x0b\x42IOENTRY_P2\x10\x11\x12\x0e\n\nBIOLITE_N2\x10\x12\x12\n\n\x06XPASS2\x10\x13\x12\x0c\n\x08XPASS_S3\x10\x14\x12\x0f\n\x0b\x42IOENTRY_R2\x10\x15\x12\x0c\n\x08XPASS_D2\x10\x16\x12\x12\n\x0e\x44OOR_MODULE_21\x10\x17\x12\x13\n\x0fXPASS_D2_KEYPAD\x10\x18\x12\x0c\n\x08\x46\x41\x43\x45LITE\x10\x19\x12\x11\n\rXPASS2_KEYPAD\x10\x1a\x12\x15\n\x11\x46\x41\x43\x45STATION_F2_FP\x10\x1d\x12\x12\n\x0e\x46\x41\x43\x45STATION_F2\x10\x1e\x12\x11\n\rXSTATION_2_QR\x10\x1f\x12\x0e\n\nXSTATION_2\x10 \x12\n\n\x06IM_120\x10!\x12\x11\n\rXSTATION_2_FP\x10\"\x12\x10\n\x0c\x42IOSTATION_3\x10#\x12\x0c\n\x07UNKNOWN\x10\xff\x01\x1a\x02\x10\x01*4\n\nSwitchType\x12\x11\n\rNORMALLY_OPEN\x10\x00\x12\x13\n\x0fNORMALLY_CLOSED\x10\x01*\xaf\x01\n\x08LEDColor\x12\x11\n\rLED_COLOR_OFF\x10\x00\x12\x11\n\rLED_COLOR_RED\x10\x01\x12\x14\n\x10LED_COLOR_YELLOW\x10\x02\x12\x13\n\x0fLED_COLOR_GREEN\x10\x03\x12\x12\n\x0eLED_COLOR_CYAN\x10\x04\x12\x12\n\x0eLED_COLOR_BLUE\x10\x05\x12\x15\n\x11LED_COLOR_MAGENTA\x10\x06\x12\x13\n\x0fLED_COLOR_WHITE\x10\x07*d\n\nBuzzerTone\x12\x13\n\x0f\x42UZZER_TONE_OFF\x10\x00\x12\x13\n\x0f\x42UZZER_TONE_LOW\x10\x01\x12\x16\n\x12\x42UZZER_TONE_MIDDLE\x10\x02\x12\x14\n\x10\x42UZZER_TONE_HIGH\x10\x03\x32\xec\n\n\x06\x44\x65vice\x12:\n\x07GetInfo\x12\x16.device.GetInfoRequest\x1a\x17.device.GetInfoResponse\x12X\n\x11GetCapabilityInfo\x12 .device.GetCapabilityInfoRequest\x1a!.device.GetCapabilityInfoResponse\x12I\n\x0c\x44\x65leteRootCA\x12\x1b.device.DeleteRootCARequest\x1a\x1c.device.DeleteRootCAResponse\x12\x31\n\x04Lock\x12\x13.device.LockRequest\x1a\x14.device.LockResponse\x12@\n\tLockMulti\x12\x18.device.LockMultiRequest\x1a\x19.device.LockMultiResponse\x12\x37\n\x06Unlock\x12\x15.device.UnlockRequest\x1a\x16.device.UnlockResponse\x12\x46\n\x0bUnlockMulti\x12\x1a.device.UnlockMultiRequest\x1a\x1b.device.UnlockMultiResponse\x12\x37\n\x06Reboot\x12\x15.device.RebootRequest\x1a\x16.device.RebootResponse\x12\x46\n\x0bRebootMulti\x12\x1a.device.RebootMultiRequest\x1a\x1b.device.RebootMultiResponse\x12I\n\x0c\x46\x61\x63toryReset\x12\x1b.device.FactoryResetRequest\x1a\x1c.device.FactoryResetResponse\x12X\n\x11\x46\x61\x63toryResetMulti\x12 .device.FactoryResetMultiRequest\x1a!.device.FactoryResetMultiResponse\x12:\n\x07\x43learDB\x12\x16.device.ClearDBRequest\x1a\x17.device.ClearDBResponse\x12I\n\x0c\x43learDBMulti\x12\x1b.device.ClearDBMultiRequest\x1a\x1c.device.ClearDBMultiResponse\x12\x46\n\x0bResetConfig\x12\x1a.device.ResetConfigRequest\x1a\x1b.device.ResetConfigResponse\x12U\n\x10ResetConfigMulti\x12\x1f.device.ResetConfigMultiRequest\x1a .device.ResetConfigMultiResponse\x12R\n\x0fUpgradeFirmware\x12\x1e.device.UpgradeFirmwareRequest\x1a\x1f.device.UpgradeFirmwareResponse\x12\x61\n\x14UpgradeFirmwareMulti\x12#.device.UpgradeFirmwareMultiRequest\x1a$.device.UpgradeFirmwareMultiResponse\x12\x43\n\nGetHashKey\x12\x19.device.GetHashKeyRequest\x1a\x1a.device.GetHashKeyResponse\x12\x43\n\nSetHashKey\x12\x19.device.SetHashKeyRequest\x1a\x1a.device.SetHashKeyResponseB5\n\x19\x63om.supremainc.sdk.deviceP\x01Z\x16\x62iostar/service/deviceb\x06proto3')

_TYPE = DESCRIPTOR.enum_types_by_name['Type']
Type = enum_type_wrapper.EnumTypeWrapper(_TYPE)
_SWITCHTYPE = DESCRIPTOR.enum_types_by_name['SwitchType']
SwitchType = enum_type_wrapper.EnumTypeWrapper(_SWITCHTYPE)
_LEDCOLOR = DESCRIPTOR.enum_types_by_name['LEDColor']
LEDColor = enum_type_wrapper.EnumTypeWrapper(_LEDCOLOR)
_BUZZERTONE = DESCRIPTOR.enum_types_by_name['BuzzerTone']
BuzzerTone = enum_type_wrapper.EnumTypeWrapper(_BUZZERTONE)
UNDEFINED = 0
BIOENTRY_PLUS = 1
BIOENTRY_W = 2
BIOLITE_NET = 3
XPASS = 4
XPASS_S2 = 5
ENTRY_MAX = 5
SECURE_IO_2 = 6
DOOR_MODULE_20 = 7
BIOSTATION_2 = 8
BIOSTATION_A2 = 9
FACESTATION_2 = 10
IO_DEVICE = 11
BIOSTATION_L2 = 12
BIOENTRY_W2 = 13
RS485_SLAVE = 128
CORESTATION_40 = 14
OUTPUT_MODULE = 15
INPUT_MODULE = 16
BIOENTRY_P2 = 17
BIOLITE_N2 = 18
XPASS2 = 19
XPASS_S3 = 20
BIOENTRY_R2 = 21
XPASS_D2 = 22
DOOR_MODULE_21 = 23
XPASS_D2_KEYPAD = 24
FACELITE = 25
XPASS2_KEYPAD = 26
FACESTATION_F2_FP = 29
FACESTATION_F2 = 30
XSTATION_2_QR = 31
XSTATION_2 = 32
IM_120 = 33
XSTATION_2_FP = 34
BIOSTATION_3 = 35
UNKNOWN = 255
NORMALLY_OPEN = 0
NORMALLY_CLOSED = 1
LED_COLOR_OFF = 0
LED_COLOR_RED = 1
LED_COLOR_YELLOW = 2
LED_COLOR_GREEN = 3
LED_COLOR_CYAN = 4
LED_COLOR_BLUE = 5
LED_COLOR_MAGENTA = 6
LED_COLOR_WHITE = 7
BUZZER_TONE_OFF = 0
BUZZER_TONE_LOW = 1
BUZZER_TONE_MIDDLE = 2
BUZZER_TONE_HIGH = 3


_GETINFOREQUEST = DESCRIPTOR.message_types_by_name['GetInfoRequest']
_FACTORYINFO = DESCRIPTOR.message_types_by_name['FactoryInfo']
_GETINFORESPONSE = DESCRIPTOR.message_types_by_name['GetInfoResponse']
_GETCAPABILITYINFOREQUEST = DESCRIPTOR.message_types_by_name['GetCapabilityInfoRequest']
_CAPABILITYINFO = DESCRIPTOR.message_types_by_name['CapabilityInfo']
_GETCAPABILITYINFORESPONSE = DESCRIPTOR.message_types_by_name['GetCapabilityInfoResponse']
_DELETEROOTCAREQUEST = DESCRIPTOR.message_types_by_name['DeleteRootCARequest']
_DELETEROOTCARESPONSE = DESCRIPTOR.message_types_by_name['DeleteRootCAResponse']
_LOCKREQUEST = DESCRIPTOR.message_types_by_name['LockRequest']
_LOCKRESPONSE = DESCRIPTOR.message_types_by_name['LockResponse']
_LOCKMULTIREQUEST = DESCRIPTOR.message_types_by_name['LockMultiRequest']
_LOCKMULTIRESPONSE = DESCRIPTOR.message_types_by_name['LockMultiResponse']
_UNLOCKREQUEST = DESCRIPTOR.message_types_by_name['UnlockRequest']
_UNLOCKRESPONSE = DESCRIPTOR.message_types_by_name['UnlockResponse']
_UNLOCKMULTIREQUEST = DESCRIPTOR.message_types_by_name['UnlockMultiRequest']
_UNLOCKMULTIRESPONSE = DESCRIPTOR.message_types_by_name['UnlockMultiResponse']
_REBOOTREQUEST = DESCRIPTOR.message_types_by_name['RebootRequest']
_REBOOTRESPONSE = DESCRIPTOR.message_types_by_name['RebootResponse']
_REBOOTMULTIREQUEST = DESCRIPTOR.message_types_by_name['RebootMultiRequest']
_REBOOTMULTIRESPONSE = DESCRIPTOR.message_types_by_name['RebootMultiResponse']
_FACTORYRESETREQUEST = DESCRIPTOR.message_types_by_name['FactoryResetRequest']
_FACTORYRESETRESPONSE = DESCRIPTOR.message_types_by_name['FactoryResetResponse']
_FACTORYRESETMULTIREQUEST = DESCRIPTOR.message_types_by_name['FactoryResetMultiRequest']
_FACTORYRESETMULTIRESPONSE = DESCRIPTOR.message_types_by_name['FactoryResetMultiResponse']
_CLEARDBREQUEST = DESCRIPTOR.message_types_by_name['ClearDBRequest']
_CLEARDBRESPONSE = DESCRIPTOR.message_types_by_name['ClearDBResponse']
_CLEARDBMULTIREQUEST = DESCRIPTOR.message_types_by_name['ClearDBMultiRequest']
_CLEARDBMULTIRESPONSE = DESCRIPTOR.message_types_by_name['ClearDBMultiResponse']
_RESETCONFIGREQUEST = DESCRIPTOR.message_types_by_name['ResetConfigRequest']
_RESETCONFIGRESPONSE = DESCRIPTOR.message_types_by_name['ResetConfigResponse']
_RESETCONFIGMULTIREQUEST = DESCRIPTOR.message_types_by_name['ResetConfigMultiRequest']
_RESETCONFIGMULTIRESPONSE = DESCRIPTOR.message_types_by_name['ResetConfigMultiResponse']
_UPGRADEFIRMWAREREQUEST = DESCRIPTOR.message_types_by_name['UpgradeFirmwareRequest']
_UPGRADEFIRMWARERESPONSE = DESCRIPTOR.message_types_by_name['UpgradeFirmwareResponse']
_UPGRADEFIRMWAREMULTIREQUEST = DESCRIPTOR.message_types_by_name['UpgradeFirmwareMultiRequest']
_UPGRADEFIRMWAREMULTIRESPONSE = DESCRIPTOR.message_types_by_name['UpgradeFirmwareMultiResponse']
_GETHASHKEYREQUEST = DESCRIPTOR.message_types_by_name['GetHashKeyRequest']
_GETHASHKEYRESPONSE = DESCRIPTOR.message_types_by_name['GetHashKeyResponse']
_SETHASHKEYREQUEST = DESCRIPTOR.message_types_by_name['SetHashKeyRequest']
_SETHASHKEYRESPONSE = DESCRIPTOR.message_types_by_name['SetHashKeyResponse']
GetInfoRequest = _reflection.GeneratedProtocolMessageType('GetInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETINFOREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.GetInfoRequest)
  })
_sym_db.RegisterMessage(GetInfoRequest)

FactoryInfo = _reflection.GeneratedProtocolMessageType('FactoryInfo', (_message.Message,), {
  'DESCRIPTOR' : _FACTORYINFO,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.FactoryInfo)
  })
_sym_db.RegisterMessage(FactoryInfo)

GetInfoResponse = _reflection.GeneratedProtocolMessageType('GetInfoResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETINFORESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.GetInfoResponse)
  })
_sym_db.RegisterMessage(GetInfoResponse)

GetCapabilityInfoRequest = _reflection.GeneratedProtocolMessageType('GetCapabilityInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCAPABILITYINFOREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.GetCapabilityInfoRequest)
  })
_sym_db.RegisterMessage(GetCapabilityInfoRequest)

CapabilityInfo = _reflection.GeneratedProtocolMessageType('CapabilityInfo', (_message.Message,), {
  'DESCRIPTOR' : _CAPABILITYINFO,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.CapabilityInfo)
  })
_sym_db.RegisterMessage(CapabilityInfo)

GetCapabilityInfoResponse = _reflection.GeneratedProtocolMessageType('GetCapabilityInfoResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETCAPABILITYINFORESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.GetCapabilityInfoResponse)
  })
_sym_db.RegisterMessage(GetCapabilityInfoResponse)

DeleteRootCARequest = _reflection.GeneratedProtocolMessageType('DeleteRootCARequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETEROOTCAREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.DeleteRootCARequest)
  })
_sym_db.RegisterMessage(DeleteRootCARequest)

DeleteRootCAResponse = _reflection.GeneratedProtocolMessageType('DeleteRootCAResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETEROOTCARESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.DeleteRootCAResponse)
  })
_sym_db.RegisterMessage(DeleteRootCAResponse)

LockRequest = _reflection.GeneratedProtocolMessageType('LockRequest', (_message.Message,), {
  'DESCRIPTOR' : _LOCKREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.LockRequest)
  })
_sym_db.RegisterMessage(LockRequest)

LockResponse = _reflection.GeneratedProtocolMessageType('LockResponse', (_message.Message,), {
  'DESCRIPTOR' : _LOCKRESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.LockResponse)
  })
_sym_db.RegisterMessage(LockResponse)

LockMultiRequest = _reflection.GeneratedProtocolMessageType('LockMultiRequest', (_message.Message,), {
  'DESCRIPTOR' : _LOCKMULTIREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.LockMultiRequest)
  })
_sym_db.RegisterMessage(LockMultiRequest)

LockMultiResponse = _reflection.GeneratedProtocolMessageType('LockMultiResponse', (_message.Message,), {
  'DESCRIPTOR' : _LOCKMULTIRESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.LockMultiResponse)
  })
_sym_db.RegisterMessage(LockMultiResponse)

UnlockRequest = _reflection.GeneratedProtocolMessageType('UnlockRequest', (_message.Message,), {
  'DESCRIPTOR' : _UNLOCKREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.UnlockRequest)
  })
_sym_db.RegisterMessage(UnlockRequest)

UnlockResponse = _reflection.GeneratedProtocolMessageType('UnlockResponse', (_message.Message,), {
  'DESCRIPTOR' : _UNLOCKRESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.UnlockResponse)
  })
_sym_db.RegisterMessage(UnlockResponse)

UnlockMultiRequest = _reflection.GeneratedProtocolMessageType('UnlockMultiRequest', (_message.Message,), {
  'DESCRIPTOR' : _UNLOCKMULTIREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.UnlockMultiRequest)
  })
_sym_db.RegisterMessage(UnlockMultiRequest)

UnlockMultiResponse = _reflection.GeneratedProtocolMessageType('UnlockMultiResponse', (_message.Message,), {
  'DESCRIPTOR' : _UNLOCKMULTIRESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.UnlockMultiResponse)
  })
_sym_db.RegisterMessage(UnlockMultiResponse)

RebootRequest = _reflection.GeneratedProtocolMessageType('RebootRequest', (_message.Message,), {
  'DESCRIPTOR' : _REBOOTREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.RebootRequest)
  })
_sym_db.RegisterMessage(RebootRequest)

RebootResponse = _reflection.GeneratedProtocolMessageType('RebootResponse', (_message.Message,), {
  'DESCRIPTOR' : _REBOOTRESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.RebootResponse)
  })
_sym_db.RegisterMessage(RebootResponse)

RebootMultiRequest = _reflection.GeneratedProtocolMessageType('RebootMultiRequest', (_message.Message,), {
  'DESCRIPTOR' : _REBOOTMULTIREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.RebootMultiRequest)
  })
_sym_db.RegisterMessage(RebootMultiRequest)

RebootMultiResponse = _reflection.GeneratedProtocolMessageType('RebootMultiResponse', (_message.Message,), {
  'DESCRIPTOR' : _REBOOTMULTIRESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.RebootMultiResponse)
  })
_sym_db.RegisterMessage(RebootMultiResponse)

FactoryResetRequest = _reflection.GeneratedProtocolMessageType('FactoryResetRequest', (_message.Message,), {
  'DESCRIPTOR' : _FACTORYRESETREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.FactoryResetRequest)
  })
_sym_db.RegisterMessage(FactoryResetRequest)

FactoryResetResponse = _reflection.GeneratedProtocolMessageType('FactoryResetResponse', (_message.Message,), {
  'DESCRIPTOR' : _FACTORYRESETRESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.FactoryResetResponse)
  })
_sym_db.RegisterMessage(FactoryResetResponse)

FactoryResetMultiRequest = _reflection.GeneratedProtocolMessageType('FactoryResetMultiRequest', (_message.Message,), {
  'DESCRIPTOR' : _FACTORYRESETMULTIREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.FactoryResetMultiRequest)
  })
_sym_db.RegisterMessage(FactoryResetMultiRequest)

FactoryResetMultiResponse = _reflection.GeneratedProtocolMessageType('FactoryResetMultiResponse', (_message.Message,), {
  'DESCRIPTOR' : _FACTORYRESETMULTIRESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.FactoryResetMultiResponse)
  })
_sym_db.RegisterMessage(FactoryResetMultiResponse)

ClearDBRequest = _reflection.GeneratedProtocolMessageType('ClearDBRequest', (_message.Message,), {
  'DESCRIPTOR' : _CLEARDBREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.ClearDBRequest)
  })
_sym_db.RegisterMessage(ClearDBRequest)

ClearDBResponse = _reflection.GeneratedProtocolMessageType('ClearDBResponse', (_message.Message,), {
  'DESCRIPTOR' : _CLEARDBRESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.ClearDBResponse)
  })
_sym_db.RegisterMessage(ClearDBResponse)

ClearDBMultiRequest = _reflection.GeneratedProtocolMessageType('ClearDBMultiRequest', (_message.Message,), {
  'DESCRIPTOR' : _CLEARDBMULTIREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.ClearDBMultiRequest)
  })
_sym_db.RegisterMessage(ClearDBMultiRequest)

ClearDBMultiResponse = _reflection.GeneratedProtocolMessageType('ClearDBMultiResponse', (_message.Message,), {
  'DESCRIPTOR' : _CLEARDBMULTIRESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.ClearDBMultiResponse)
  })
_sym_db.RegisterMessage(ClearDBMultiResponse)

ResetConfigRequest = _reflection.GeneratedProtocolMessageType('ResetConfigRequest', (_message.Message,), {
  'DESCRIPTOR' : _RESETCONFIGREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.ResetConfigRequest)
  })
_sym_db.RegisterMessage(ResetConfigRequest)

ResetConfigResponse = _reflection.GeneratedProtocolMessageType('ResetConfigResponse', (_message.Message,), {
  'DESCRIPTOR' : _RESETCONFIGRESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.ResetConfigResponse)
  })
_sym_db.RegisterMessage(ResetConfigResponse)

ResetConfigMultiRequest = _reflection.GeneratedProtocolMessageType('ResetConfigMultiRequest', (_message.Message,), {
  'DESCRIPTOR' : _RESETCONFIGMULTIREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.ResetConfigMultiRequest)
  })
_sym_db.RegisterMessage(ResetConfigMultiRequest)

ResetConfigMultiResponse = _reflection.GeneratedProtocolMessageType('ResetConfigMultiResponse', (_message.Message,), {
  'DESCRIPTOR' : _RESETCONFIGMULTIRESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.ResetConfigMultiResponse)
  })
_sym_db.RegisterMessage(ResetConfigMultiResponse)

UpgradeFirmwareRequest = _reflection.GeneratedProtocolMessageType('UpgradeFirmwareRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPGRADEFIRMWAREREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.UpgradeFirmwareRequest)
  })
_sym_db.RegisterMessage(UpgradeFirmwareRequest)

UpgradeFirmwareResponse = _reflection.GeneratedProtocolMessageType('UpgradeFirmwareResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPGRADEFIRMWARERESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.UpgradeFirmwareResponse)
  })
_sym_db.RegisterMessage(UpgradeFirmwareResponse)

UpgradeFirmwareMultiRequest = _reflection.GeneratedProtocolMessageType('UpgradeFirmwareMultiRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPGRADEFIRMWAREMULTIREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.UpgradeFirmwareMultiRequest)
  })
_sym_db.RegisterMessage(UpgradeFirmwareMultiRequest)

UpgradeFirmwareMultiResponse = _reflection.GeneratedProtocolMessageType('UpgradeFirmwareMultiResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPGRADEFIRMWAREMULTIRESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.UpgradeFirmwareMultiResponse)
  })
_sym_db.RegisterMessage(UpgradeFirmwareMultiResponse)

GetHashKeyRequest = _reflection.GeneratedProtocolMessageType('GetHashKeyRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETHASHKEYREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.GetHashKeyRequest)
  })
_sym_db.RegisterMessage(GetHashKeyRequest)

GetHashKeyResponse = _reflection.GeneratedProtocolMessageType('GetHashKeyResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETHASHKEYRESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.GetHashKeyResponse)
  })
_sym_db.RegisterMessage(GetHashKeyResponse)

SetHashKeyRequest = _reflection.GeneratedProtocolMessageType('SetHashKeyRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETHASHKEYREQUEST,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.SetHashKeyRequest)
  })
_sym_db.RegisterMessage(SetHashKeyRequest)

SetHashKeyResponse = _reflection.GeneratedProtocolMessageType('SetHashKeyResponse', (_message.Message,), {
  'DESCRIPTOR' : _SETHASHKEYRESPONSE,
  '__module__' : 'device_pb2'
  # @@protoc_insertion_point(class_scope:device.SetHashKeyResponse)
  })
_sym_db.RegisterMessage(SetHashKeyResponse)

_DEVICE = DESCRIPTOR.services_by_name['Device']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\031com.supremainc.sdk.deviceP\001Z\026biostar/service/device'
  _TYPE._options = None
  _TYPE._serialized_options = b'\020\001'
  _TYPE._serialized_start=2610
  _TYPE._serialized_end=3251
  _SWITCHTYPE._serialized_start=3253
  _SWITCHTYPE._serialized_end=3305
  _LEDCOLOR._serialized_start=3308
  _LEDCOLOR._serialized_end=3483
  _BUZZERTONE._serialized_start=3485
  _BUZZERTONE._serialized_end=3585
  _GETINFOREQUEST._serialized_start=35
  _GETINFOREQUEST._serialized_end=69
  _FACTORYINFO._serialized_start=72
  _FACTORYINFO._serialized_end=214
  _GETINFORESPONSE._serialized_start=216
  _GETINFORESPONSE._serialized_end=268
  _GETCAPABILITYINFOREQUEST._serialized_start=270
  _GETCAPABILITYINFOREQUEST._serialized_end=314
  _CAPABILITYINFO._serialized_start=317
  _CAPABILITYINFO._serialized_end=969
  _GETCAPABILITYINFORESPONSE._serialized_start=971
  _GETCAPABILITYINFORESPONSE._serialized_end=1039
  _DELETEROOTCAREQUEST._serialized_start=1041
  _DELETEROOTCAREQUEST._serialized_end=1080
  _DELETEROOTCARESPONSE._serialized_start=1082
  _DELETEROOTCARESPONSE._serialized_end=1104
  _LOCKREQUEST._serialized_start=1106
  _LOCKREQUEST._serialized_end=1137
  _LOCKRESPONSE._serialized_start=1139
  _LOCKRESPONSE._serialized_end=1153
  _LOCKMULTIREQUEST._serialized_start=1155
  _LOCKMULTIREQUEST._serialized_end=1192
  _LOCKMULTIRESPONSE._serialized_start=1194
  _LOCKMULTIRESPONSE._serialized_end=1255
  _UNLOCKREQUEST._serialized_start=1257
  _UNLOCKREQUEST._serialized_end=1290
  _UNLOCKRESPONSE._serialized_start=1292
  _UNLOCKRESPONSE._serialized_end=1308
  _UNLOCKMULTIREQUEST._serialized_start=1310
  _UNLOCKMULTIREQUEST._serialized_end=1349
  _UNLOCKMULTIRESPONSE._serialized_start=1351
  _UNLOCKMULTIRESPONSE._serialized_end=1414
  _REBOOTREQUEST._serialized_start=1416
  _REBOOTREQUEST._serialized_end=1449
  _REBOOTRESPONSE._serialized_start=1451
  _REBOOTRESPONSE._serialized_end=1467
  _REBOOTMULTIREQUEST._serialized_start=1469
  _REBOOTMULTIREQUEST._serialized_end=1508
  _REBOOTMULTIRESPONSE._serialized_start=1510
  _REBOOTMULTIRESPONSE._serialized_end=1573
  _FACTORYRESETREQUEST._serialized_start=1575
  _FACTORYRESETREQUEST._serialized_end=1614
  _FACTORYRESETRESPONSE._serialized_start=1616
  _FACTORYRESETRESPONSE._serialized_end=1638
  _FACTORYRESETMULTIREQUEST._serialized_start=1640
  _FACTORYRESETMULTIREQUEST._serialized_end=1685
  _FACTORYRESETMULTIRESPONSE._serialized_start=1687
  _FACTORYRESETMULTIRESPONSE._serialized_end=1756
  _CLEARDBREQUEST._serialized_start=1758
  _CLEARDBREQUEST._serialized_end=1792
  _CLEARDBRESPONSE._serialized_start=1794
  _CLEARDBRESPONSE._serialized_end=1811
  _CLEARDBMULTIREQUEST._serialized_start=1813
  _CLEARDBMULTIREQUEST._serialized_end=1853
  _CLEARDBMULTIRESPONSE._serialized_start=1855
  _CLEARDBMULTIRESPONSE._serialized_end=1919
  _RESETCONFIGREQUEST._serialized_start=1921
  _RESETCONFIGREQUEST._serialized_end=1996
  _RESETCONFIGRESPONSE._serialized_start=1998
  _RESETCONFIGRESPONSE._serialized_end=2019
  _RESETCONFIGMULTIREQUEST._serialized_start=2021
  _RESETCONFIGMULTIREQUEST._serialized_end=2102
  _RESETCONFIGMULTIRESPONSE._serialized_start=2104
  _RESETCONFIGMULTIRESPONSE._serialized_end=2172
  _UPGRADEFIRMWAREREQUEST._serialized_start=2174
  _UPGRADEFIRMWAREREQUEST._serialized_end=2238
  _UPGRADEFIRMWARERESPONSE._serialized_start=2240
  _UPGRADEFIRMWARERESPONSE._serialized_end=2265
  _UPGRADEFIRMWAREMULTIREQUEST._serialized_start=2267
  _UPGRADEFIRMWAREMULTIREQUEST._serialized_end=2337
  _UPGRADEFIRMWAREMULTIRESPONSE._serialized_start=2339
  _UPGRADEFIRMWAREMULTIRESPONSE._serialized_end=2411
  _GETHASHKEYREQUEST._serialized_start=2413
  _GETHASHKEYREQUEST._serialized_end=2450
  _GETHASHKEYRESPONSE._serialized_start=2452
  _GETHASHKEYRESPONSE._serialized_end=2509
  _SETHASHKEYREQUEST._serialized_start=2511
  _SETHASHKEYREQUEST._serialized_end=2585
  _SETHASHKEYRESPONSE._serialized_start=2587
  _SETHASHKEYRESPONSE._serialized_end=2607
  _DEVICE._serialized_start=3588
  _DEVICE._serialized_end=4976
# @@protoc_insertion_point(module_scope)
